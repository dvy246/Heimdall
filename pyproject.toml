[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "heimdall"
version = "0.1.0"
description = "Multi-Agent Financial Intelligence System using LangGraph and LangChain and Agno"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Divyy Yadav", email = "yadavdipu296@gmail.com"}
]
maintainers = [
    {name = "Divyy Yadav", email = "yadavdipu296@gmail.com"}
]
keywords = ["ai", "finance", "langchain", "langgraph", "multi-agent", "financial-analysis"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "aiofiles>=24.1.0",
    "aiohttp>=3.12.0",
    "aiosqlite>=0.21.0",
    "annotated-types>=0.7.0",
    "anyio>=4.10.0",
    "async-timeout>=4.0.3",
    "attrs>=25.3.0",
    "backoff>=2.2.1",
    "bcrypt>=4.3.0",
    "beautifulsoup4>=4.13.4",
    "cachetools>=5.5.2",
    "certifi",
    "charset-normalizer",
    "chromadb>=1.0.20",
    "click>=8.2.1",
    "coloredlogs>=15.0.1",
    "curl-cffi>=0.13.0",
    "dataclasses-json>=0.6.7",
    "ddgs>=9.5.4",
    "distro>=1.9.0",
    "python-dotenv>=1.1.1",
    "duckduckgo-search>=8.1.1",
    "durationpy>=0.10",
    "edgartools>=4.8.1",
    "filelock>=3.19.1",
    "filetype>=1.2.0",
    "finnhub-python>=2.4.24",
    "flatbuffers>=25.2.10",
    "fred>=3.1",
    "fsspec>=2025.7.0",
    "google-ai-generativelanguage>=0.6.18",
    "google-api-core>=2.25.1",
    "google-auth>=2.40.3",
    "googleapis-common-protos>=1.70.0",
    "grandalf>=0.8",
    "groq>=0.31.0",
    "grpcio>=1.74.0",
    "grpcio-status>=1.74.0",
    "h11>=0.16.0",
    "httpcore>=1.0.9",
    "httptools>=0.6.4",
    "httpx>=0.28.1",
    "httpx-sse>=0.4.1",
    "httpxthrottlecache>=0.2.1",
    "huggingface-hub>=0.34.4",
    "humanfriendly>=10.0",
    "humanize>=4.12.3",
    "idna",
    "jinja2>=3.1.6",
    "joblib>=1.5.2",
    "jsonpatch>=1.33",
    "jsonpointer>=3.0.0",
    "jsonschema>=4.25.1",
    "jsonschema-specifications>=2025.4.1",
    "kubernetes>=33.1.0",
    "langchain>=0.3.27",
    "langchain-chroma>=0.2.5",
    "langchain-community>=0.3.27",
    "langchain-core>=0.3.74",
    "langchain-experimental>=0.3.4",
    "langchain-google-genai>=2.1.9",
    "langchain-groq>=0.3.7",
    "langchain-mcp-adapters>=0.1.9",
    "langchain-text-splitters>=0.3.9",
    "langgraph>=0.6.6",
    "langgraph-checkpoint>=2.1.1",
    "langgraph-checkpoint-sqlite>=2.0.11",
    "langgraph-prebuilt>=0.6.4",
    "langgraph-sdk>=0.2.3",
    "langgraph-supervisor>=0.0.29",
    "langgraph-swarm>=0.0.14",
    "langsmith>=0.4.16",
    "lxml",
    "markdown-it-py>=4.0.0",
    "markupsafe>=3.0.2",
    "marshmallow>=3.26.1",
    "mcp>=1.13.1",
    "mdurl>=0.1.2",
    "mmh3>=5.2.0",
    "mpmath>=1.3.0",
    "multidict>=6.6.4",
    "mypy-extensions>=1.1.0",
    "numpy>=1.23.5",
    "oauthlib>=3.3.1",
    "onnxruntime>=1.22.1",
    "opentelemetry-api>=1.36.0",
    "opentelemetry-exporter-otlp-proto-common>=1.36.0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.36.0",
    "opentelemetry-proto>=1.36.0",
    "opentelemetry-sdk>=1.36.0",
    "opentelemetry-semantic-conventions>=0.57b0",
    "orjson>=3.11.2",
    "ormsgpack>=1.10.0",
    "overrides>=7.7.0",
    "packaging>=24.2",
    "pandas>=2.3.2",
    "pandas-ta>=0.3.14b0",
    "peewee",
    "platformdirs",
    "polygon>=1.2.8",
    "posthog>=5.4.0",
    "primp>=0.15.0",
    "propcache>=0.3.2",
    "proto-plus>=1.26.1",
    "protobuf>=6.32.0",
    "psutil",
    "pyarrow>=21.0.0",
    "pyasn1>=0.6.1",
    "pyasn1-modules>=0.4.1",
    "pybase64>=1.4.2",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pydantic-core>=2.33.2",
    "pyee>=11.1.1",
    "pygments",
    "pyparsing>=3.2.3",
    "pypika>=0.48.9",
    "pyppeteer>=2.0.0",
    "pyproject-hooks>=1.2.0",
    "pyrate-limiter>=3.9.0",
    "pysocks",
    "python-dateutil>=2.9.0",
    "python-multipart>=0.0.20",
    "pytz>=2025.2",
    "pyyaml>=6.0.2",
    "rank-bm25>=0.2.2",
    "rapidfuzz>=3.13.0",
    "referencing>=0.36.2",
    "regex>=2025.7.34",
    "requests",
    "requests-oauthlib>=2.0.0",
    "requests-toolbelt>=1.0.0",
    "rich>=14.1.0",
    "rpds-py>=0.27.0",
    "rsa>=4.9.1",
    "scikit-learn>=1.7.1",
    "scipy>=1.15.3",
    "sec-api>=1.0.32",
    "sec-edgar-api>=1.1.0",
    "shellingham>=1.5.4",
    "six>=1.17.0",
    "sniffio>=1.3.1",
    "soupsieve",
    "sqlalchemy>=2.0.43",
    "sqlite-vec>=0.1.6",
    "sse-starlette>=3.0.2",
    "stamina>=25.1.0",
    "starlette>=0.47.3",
    "sympy>=1.14.0",
    "ta-lib>=0.6.5",
    "tabulate>=0.9.0",
    "tenacity>=9.1.2",
    "textdistance>=4.6.3",
    "threadpoolctl>=3.6.0",
    "tokenizers>=0.21.4",
    "tomli>=2.2.1",
    "tqdm>=4.67.1",
    "tradingeconomics>=4.5.3",
    "typer>=0.16.1",
    "typing-inspect>=0.9.0",
    "typing-inspection>=0.4.1",
    "typing-extensions",
    "tzdata>=2025.2",
    "unidecode>=1.4.0",
    "urllib3>=1.26.20",
    "uvicorn>=0.35.0",
    "uvloop>=0.21.0",
    "watchfiles>=1.1.0",
    "websocket-client>=1.8.0",
    "websockets>=15.0.1",
    "xxhash>=3.5.0",
    "yarl>=1.20.1",
    "yfinance>=0.2.65",
    "zstandard>=0.23.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "ipython>=8.0.0",
    "matplotlib-inline>=0.1.0",
    "notebook>=6.5.0",
]
docker = [
    "docker>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/divyyadav/heimdall"
Repository = "https://github.com/divyyadav/heimdall.git"
Documentation = "https://github.com/divyyadav/heimdall#readme"
"Bug Tracker" = "https://github.com/divyyadav/heimdall/issues"

[project.scripts]
heimdall = "src.main:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "utils*", "config*"]
exclude = ["tests*", "notebooks*", "logs*", "data*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json", "*.toml"]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | logs
  | data
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["logs/*", "data/*"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "logs/",
    "data/",
    "notebooks/",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as asyncio tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src", "utils", "config"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/logs/*",
    "*/data/*",
    "*/notebooks/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]